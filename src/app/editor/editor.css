/* List styles */
.tiptap ul,
.tiptap ol {
  padding: 0 1rem;
  margin-left: 0.4rem;
}

.tiptap ul li {
  list-style-type: disc;
}

.tiptap ul li p {
  margin: 0;
}

.tiptap ol li {
  list-style-type: decimal;
}

.tiptap ol li p {
  margin: 0;
}

/* Nested list styles - Google Docs style */
/* Unordered lists - different bullet styles for each level */
.tiptap ul li ul {
  margin-left: 1.5em;
}

.tiptap ul li ul li {
  list-style-type: circle;
}

.tiptap ul li ul li ul {
  margin-left: 1.5em;
}

.tiptap ul li ul li ul li {
  list-style-type: square;
}

.tiptap ul li ul li ul li ul {
  margin-left: 1.5em;
}

.tiptap ul li ul li ul li ul li {
  list-style-type: disc;
}

.tiptap ul li ul li ul li ul li ul {
  margin-left: 1.5em;
}

.tiptap ul li ul li ul li ul li ul li {
  list-style-type: circle;
}

.tiptap ul li ul li ul li ul li ul li ul {
  margin-left: 1.5em;
}

.tiptap ul li ul li ul li ul li ul li ul li {
  list-style-type: square;
}

/* Level 6 - back to disc */
.tiptap ul li ul li ul li ul li ul li ul li ul {
  margin-left: 1.5em;
}

.tiptap ul li ul li ul li ul li ul li ul li ul li {
  list-style-type: disc;
}

/* Level 7 - back to circle */
.tiptap ul li ul li ul li ul li ul li ul li ul li ul {
  margin-left: 1.5em;
}

.tiptap ul li ul li ul li ul li ul li ul li ul li ul li {
  list-style-type: circle;
}

/* Level 8 - back to square */
.tiptap ul li ul li ul li ul li ul li ul li ul li ul li ul {
  margin-left: 1.5em;
}

.tiptap ul li ul li ul li ul li ul li ul li ul li ul li ul li {
  list-style-type: square;
}

/* Level 9 - back to disc */
.tiptap ul li ul li ul li ul li ul li ul li ul li ul li ul li ul {
  margin-left: 1.5em;
}

.tiptap ul li ul li ul li ul li ul li ul li ul li ul li ul li ul li {
  list-style-type: disc;
}

/* Level 10 - final level, back to circle */
.tiptap ul li ul li ul li ul li ul li ul li ul li ul li ul li ul li ul {
  margin-left: 1.5em;
}

.tiptap ul li ul li ul li ul li ul li ul li ul li ul li ul li ul li ul li {
  list-style-type: circle;
}

/* Ordered lists - hierarchical numbering with CSS counters */
.tiptap ol {
  counter-reset: level1;
  list-style-type: none;
  padding-left: 0;
}

.tiptap ol li {
  counter-increment: level1;
  list-style-type: none;
  position: relative;
  padding-left: 1.5em;
}

.tiptap ol li::before {
  content: counter(level1) ". ";
  position: absolute;
  left: 0;
  font-weight: normal;
}

/* Level 2 */
.tiptap ol li ol {
  counter-reset: level2;
  list-style-type: none;
  padding-left: 0;
}

.tiptap ol li ol li {
  counter-increment: level2;
  list-style-type: none;
  position: relative;
  padding-left: 2em;
}

.tiptap ol li ol li::before {
  content: counter(level1) "." counter(level2) ". ";
  position: absolute;
  left: 0;
  font-weight: normal;
}

/* Level 3 */
.tiptap ol li ol li ol {
  counter-reset: level3;
  list-style-type: none;
  padding-left: 0;
}

.tiptap ol li ol li ol li {
  counter-increment: level3;
  list-style-type: none;
  position: relative;
  padding-left: 3em;
}

.tiptap ol li ol li ol li::before {
  content: counter(level1) "." counter(level2) "." counter(level3) ". ";
  position: absolute;
  left: 0;
  font-weight: normal;
}

/* Level 4 */
.tiptap ol li ol li ol li ol {
  counter-reset: level4;
  list-style-type: none;
  padding-left: 0;
}

.tiptap ol li ol li ol li ol li {
  counter-increment: level4;
  list-style-type: none;
  position: relative;
  padding-left: 3.5em;
}

.tiptap ol li ol li ol li ol li::before {
  content: counter(level1) "." counter(level2) "." counter(level3) "."
    counter(level4) ". ";
  position: absolute;
  left: 0;
  font-weight: normal;
}

/* Level 5 */
.tiptap ol li ol li ol li ol li ol {
  counter-reset: level5;
  list-style-type: none;
  padding-left: 0;
}

.tiptap ol li ol li ol li ol li ol li {
  counter-increment: level5;
  list-style-type: none;
  position: relative;
  padding-left: 4.5em;
}

.tiptap ol li ol li ol li ol li ol li::before {
  content: counter(level1) "." counter(level2) "." counter(level3) "."
    counter(level4) "." counter(level5) ". ";
  position: absolute;
  left: 0;
  font-weight: normal;
}

/* Level 6 - lowercase letters */
.tiptap ol li ol li ol li ol li ol li ol {
  counter-reset: alpha1;
  list-style-type: none;
  padding-left: 0;
}

.tiptap ol li ol li ol li ol li ol li ol li {
  counter-increment: alpha1;
  list-style-type: none;
  position: relative;
  padding-left: 5.5em;
}

.tiptap ol li ol li ol li ol li ol li ol li::before {
  content: counter(alpha1, lower-alpha) ". ";
  position: absolute;
  left: 0;
  font-weight: normal;
}

/* Level 7 - uppercase letters */
.tiptap ol li ol li ol li ol li ol li ol li ol {
  counter-reset: alpha2;
  list-style-type: none;
  padding-left: 0;
}

.tiptap ol li ol li ol li ol li ol li ol li ol li {
  counter-increment: alpha2;
  list-style-type: none;
  position: relative;
  padding-left: 6.5em;
}

.tiptap ol li ol li ol li ol li ol li ol li ol li::before {
  content: counter(alpha2, upper-alpha) ". ";
  position: absolute;
  left: 0;
  font-weight: normal;
}

/* Level 8 - back to lowercase letters */
.tiptap ol li ol li ol li ol li ol li ol li ol li ol {
  counter-reset: alpha3;
  list-style-type: none;
  padding-left: 0;
}

.tiptap ol li ol li ol li ol li ol li ol li ol li ol li {
  counter-increment: alpha3;
  list-style-type: none;
  position: relative;
  padding-left: 7.5em;
}

.tiptap ol li ol li ol li ol li ol li ol li ol li ol li::before {
  content: counter(alpha3, lower-alpha) ". ";
  position: absolute;
  left: 0;
  font-weight: normal;
}

/* Level 9 - back to uppercase letters */
.tiptap ol li ol li ol li ol li ol li ol li ol li ol li ol {
  counter-reset: alpha4;
  list-style-type: none;
  padding-left: 0;
}

.tiptap ol li ol li ol li ol li ol li ol li ol li ol li ol li {
  counter-increment: alpha4;
  list-style-type: none;
  position: relative;
  padding-left: 8.5em;
}

.tiptap ol li ol li ol li ol li ol li ol li ol li ol li ol li::before {
  content: counter(alpha4, upper-alpha) ". ";
  position: absolute;
  left: 0;
  font-weight: normal;
}

/* Level 10 - final level, back to lowercase letters */
.tiptap ol li ol li ol li ol li ol li ol li ol li ol li ol li ol {
  counter-reset: alpha5;
  list-style-type: none;
  padding-left: 0;
}

.tiptap ol li ol li ol li ol li ol li ol li ol li ol li ol li ol li {
  counter-increment: alpha5;
  list-style-type: none;
  position: relative;
  padding-left: 9.5em;
}

.tiptap ol li ol li ol li ol li ol li ol li ol li ol li ol li ol li::before {
  content: counter(alpha5, lower-alpha) ". ";
  position: absolute;
  left: 0;
  font-weight: normal;
}

/* Fix for nested list counter inheritance issues */
.tiptap ol ol {
  counter-reset: none;
}

.tiptap ol ol ol {
  counter-reset: none;
}

.tiptap ol ol ol ol {
  counter-reset: none;
}

.tiptap ol ol ol ol ol {
  counter-reset: none;
}

/* Ensure proper counter inheritance for deeply nested lists */
.tiptap ol li ol li ol li ol li ol li ol {
  counter-reset: none;
}

.tiptap ol li ol li ol li ol li ol li ol li ol {
  counter-reset: none;
}

.tiptap ol li ol li ol li ol li ol li ol li ol li ol {
  counter-reset: none;
}

.tiptap ol li ol li ol li ol li ol li ol li ol li ol li ol {
  counter-reset: none;
}

.tiptap ol li ol li ol li ol li ol li ol li ol li ol li ol li ol {
  counter-reset: none;
}

/* Maximum supported levels: 10 levels total */
/* Levels 1-5: Decimal (1., 1.1., 1.1.1., 1.1.1.1., 1.1.1.1.1.) */
/* Levels 6-10: Alternating lowercase/uppercase letters (a., A., a., A., a.) */

/* Task list specific styles */
.tiptap ul[data-type="taskList"] {
  list-style: none;
  margin-left: 0;
  padding: 0;
}

.tiptap ul[data-type="taskList"] li {
  align-items: flex-start;
  display: flex;
}

.tiptap ul[data-type="taskList"] li > label {
  flex: 0 0 auto;
  margin-right: 0.5rem;
  user-select: none;
}

.tiptap ul[data-type="taskList"] li > div {
  flex: 1 1 auto;
}

.tiptap ul[data-type="taskList"] input[type="checkbox"] {
  cursor: pointer;
}

.tiptap ul[data-type="taskList"] ul[data-type="taskList"] {
  margin: 0;
}

/* Heading styles */
.tiptap h1,
.tiptap h2,
.tiptap h3,
.tiptap h4,
.tiptap h5,
.tiptap h6 {
  text-wrap: pretty;
}

.tiptap h1,
.tiptap h2 {
  font-size: 12px;
}

.tiptap h3,
.tiptap h4,
.tiptap h5,
.tiptap h6 {
  font-size: 11px;
}

/* Table-specific styling - ONLY for tables inside .tiptap */
.tiptap table {
  border-collapse: collapse;
  margin: 0;
  overflow: hidden;
  table-layout: fixed;
  width: 100%;
}

.tiptap table td,
.tiptap table th {
  border: 1px solid black;
  box-sizing: border-box;
  min-width: 1em;
  padding: 6px 8px;
  position: relative;
  vertical-align: top;
}

.tiptap table td > *,
.tiptap table th > * {
  margin-bottom: 0;
}

.tiptap table th {
  background-color: #c7c7c7;
  font-weight: bold;
  text-align: left;
}

.tiptap table .selectedCell:after {
  background: #959596;
  content: "";
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  pointer-events: none;
  position: absolute;
  z-index: 2;
}

.tiptap table .column-resize-handle {
  background-color: var(--primary);
  bottom: -2px;
  pointer-events: none;
  position: absolute;
  right: -2px;
  top: 0;
  width: 4px;
}

.tiptap .tableWrapper {
  margin: 1.5rem 0;
  overflow-x: auto;
}

.tiptap.resize-cursor {
  cursor: ew-resize;
  cursor: col-resize;
}

/* Image Styles */
.tiptap img {
  display: block;
  height: auto;
  margin: 1.5rem 0;
  max-width: 100%;
  /* Optimize for drag operations */
  will-change: transform;
  backface-visibility: hidden;
  transform: translateZ(0);
  /* Prevent reload during drag */
  image-rendering: auto;
  transition: none;
}

.tiptap img.ProseMirror-selectednode {
  outline: 3px solid var(--primary);
}

/* Optimize image dragging performance */
.tiptap img:active,
.tiptap img.ProseMirror-selectednode {
  /* Disable transitions during drag */
  transition: none;
  /* Use GPU acceleration */
  transform: translateZ(0);
  will-change: transform;
}

/* Prevent image reload during drag operations */
.tiptap .ProseMirror-dragging img {
  pointer-events: none;
  /* Keep original image in place until drag completes */
  opacity: 0.8;
  transform: translateZ(0);
  transition: none;
}

/* Link styles */
.tiptap a {
  color: theme("colors.blue.600");
  cursor: pointer;
}

.tiptap a:hover {
  text-decoration: underline;
}

/* Collaborative cursor styles - ensure app font is used */
.lb-user-cursor,
[data-user-cursor],
.liveblocks-cursor,
.user-cursor,
.lb-cursor,
.lb-cursor-name,
.lb-cursor-avatar,
.lb-cursor-body {
  font-family:
    -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue",
    Arial, sans-serif !important;
  font-size: 14px !important;
  font-weight: 500 !important;
  color: #374151 !important;
}

/* Thread styles - scoped to editor container */
.editor-container .floating-threads {
  display: none;
}

.editor-container .anchored-threads {
  display: block;
  max-width: 300px;
  width: 100%;
  position: absolute;
  right: 12px;
}

@media (max-width: 640px) {
  .editor-container .floating-threads {
    display: block;
  }

  .editor-container .anchored-threads {
    display: none;
  }
}

.editor-container div[data-radix-popper-content-wrapper] {
  z-index: 50 !important;
}

/* Hide Liveblocks collaborative elements during print */
@media print {
  /* Hide collaborative cursors */
  .lb-user-cursor,
  [data-user-cursor],
  .liveblocks-cursor,
  .user-cursor,
  
  /* Hide comments and threads */
  .lb-comment,
  .lb-thread,
  [data-thread],
  .liveblocks-comment-mark,
  .comment-mark,
  
  /* Hide collaborative avatars */
  .lb-avatar,
  .liveblocks-avatar,
  .user-avatar,
  
  /* Hide any floating collaborative UI */
  [data-liveblocks-portal],
  .lb-floating-composer,
  .lb-composer,
  .floating-composer,
  
  /* Hide selection indicators */
  .lb-selection,
  .liveblocks-selection,
  .user-selection,
  
  /* Hide any presence indicators */
  .lb-presence,
  .liveblocks-presence,
  .user-presence,
  
  /* Generic Liveblocks UI components */
  [class*="lb-"],
  [class*="liveblocks-"],
  
  /* Hide floating threads */
  .floating-threads,
  .anchored-threads,
  
  /* Hide toolbar and UI elements */
  .toolbar,
  [class*="toolbar"],
  .menubar,
  [class*="menubar"],
  
  /* Hide notification banners */
  .notification-banner,
  [class*="notification"] {
    display: none !important;
    visibility: hidden !important;
  }

  /* Hide collaborative text highlights during print */
  .collaborative-highlight,
  .collaborative-highlight-conflict {
    background-color: transparent !important;
    border-bottom: none !important;
    border-top: none !important;
    animation: none !important;
  }

  /* Remove selection outlines from images */
  .ProseMirror-selectednode {
    outline: none !important;
    border: none !important;
  }

  /* Ensure clean editor appearance */
  .editor-container {
    background: white !important;
    padding: 0 !important;
    margin: 0 !important;
  }

  /* Remove any cursor indicators */
  .ProseMirror::after,
  .ProseMirror::before {
    display: none !important;
  }
}

/* Collaborative text highlighting styles */
.collaborative-highlight {
  border-radius: 2px;
  transition: all 0.2s ease;
  cursor: help;
}

.collaborative-highlight-conflict {
  border-radius: 2px;
  border-top: 1px solid #ff6b35;
  animation: pulse-conflict 2s infinite;
  cursor: help;
}

@keyframes pulse-conflict {
  0%,
  100% {
    background-color: rgba(255, 165, 0, 0.2);
  }
  50% {
    background-color: rgba(255, 165, 0, 0.35);
  }
}
